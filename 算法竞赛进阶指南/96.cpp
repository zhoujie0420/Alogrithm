//
// Created by ZhouJie on 2022/5/31.
//汉诺塔问题，条件如下：
//
//1、这里有 A、B、C 和 D 四座塔。
//
//2、这里有 n 个圆盘，n 的数量是恒定的。
//
//3、每个圆盘的尺寸都不相同。
//
//4、所有的圆盘在开始时都堆叠在塔 A 上，且圆盘尺寸从塔顶到塔底逐渐增大。
//
//5、我们需要将所有的圆盘都从塔 A 转移到塔 D 上。
//
//6、每次可以移动一个圆盘，当塔为空塔或者塔顶圆盘尺寸大于被移动圆盘时，可将圆盘移至这座塔上。
//
//请你求出将所有圆盘从塔 A 移动到塔 D，所需的最小移动次数是多少。
//
//河内塔.jpg
//汉诺塔塔参考模型
//
//输入格式
//没有输入
//
//输出格式
//对于每一个整数 n，输出一个满足条件的最小移动次数，每个结果占一行。
//
//数据范围
//1≤n≤12
//输入样例：
//没有输入
//输出样例：
//参考输出格式

#include <bits/stdc++.h>

using namespace std;
int a[15];   //只有三个塔的时候
int f[15];   //四个塔的时候
int main() {
    a[1] = 1;

    for (int i = 2; i <= 12; ++i) {
        a[i] =  2*a[i-1] + 1 ;    // 但有三个塔的时候需要要 将前i-1个盘子放到B  再将最后一个盘子放C 再将B上i-1个放C;
    }
    memset(f,0x3f,sizeof (f));
    f[0] = 0 ;
    for(int i = 1;i <= 12;++i)
    {
        for(int j = 0;j < i;++j)
            f[i] = min(f[i],f[j] * 2 + a[i - j]);
    }
    for (int i = 1; i <= 12 ; ++i) {
        cout << f[i] << endl;
    }
    return 0;
}